services:
  django:
    build:
      context: ./django
    ports:
      - "8000:8000"
    command: >
      sh -c "python manage.py makemigrations &&
      python manage.py migrate &&
      gunicorn app.wsgi:application --bind 0.0.0.0:8000 --timeout 120"
    volumes:
      - ./django/app:/app
    environment:
      - DATABASE_HOST=db
      - DATABASE_NAME=${DB_NAME}
      - DATABASE_USER=${DB_USER}
      - DATABASE_PASSWORD=${DB_PASSWORD}
      - EMAIL_API_KEY = ${EMAIL_API_KEY}
    env_file:
      - .env
    depends_on:
      - db

  fastapi:
    build:
      context: ./fastapi
    command: gunicorn main:app --bind 0.0.0.0:8001 --worker-class uvicorn.workers.UvicornWorker --timeout 120
    ports:
      - "8001:8001"
    volumes:
      - ./fastapi/app:/app
    environment:
      - DATABASE_HOST=db
      - DATABASE_NAME=${DB_NAME}
      - DATABASE_USER=${DB_USER}
      - DATABASE_PASSWORD=${DB_PASSWORD}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - STABLE_DIFFUSION_KEY=${STABLE_DIFFUSION_KEY}
      - REGION_NAME=${REGION_NAME}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_URL=${S3_URL}
    env_file:
      - .env
    depends_on:
      - db

  db:
    image: postgres:16.3
    environment:
      POSTGRES_ROOT_PASSWORD: ${ROOT_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports: 
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data  # Mount a volume 
    restart: always

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
      - "443:443"
    restart: always
    depends_on:
      - django
      - fastapi
